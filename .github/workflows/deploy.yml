name: Deploy to AWS S3 and Configure Subdomain

on:
  push:
    branches:
      - main  # Change this to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Specify your Node.js version

    - name: Install dependencies
      run: |
        npm install
        npm run build  # Ensure your React app is built

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Sync S3 bucket
      run: |
        aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }} --delete

    - name: Invalidate CloudFront cache (optional)
      if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

    - name: Output S3 Website URL
      run: |
        echo "S3 Website URL: http://${{ secrets.S3_BUCKET_NAME }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com"

    - name: Update Route 53 DNS Record
      run: |
        aws route53 change-resource-record-sets \
          --hosted-zone-id ${{ secrets.ROUTE53_HOSTED_ZONE_ID }} \
          --change-batch '{
            "Changes": [
              {
                "Action": "UPSERT",
                "ResourceRecordSet": {
                  "Name": "${{ secrets.SUBDOMAIN }}",
                  "Type": "CNAME",
                  "TTL": 60,
                  "ResourceRecords": [
                    {
                      "Value": "${{ secrets.S3_BUCKET_NAME }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com"
                    }
                  ]
                }
              }
            ]
          }'
